{"version":3,"sources":["Nav/Nav.js","InputBox/InputBox.js","App.js","index.js"],"names":["app","id","InputBox","state","file","fileInputRef","React","createRef","fileChange","e","target","files","setState","props","showImage","handleUpload","makeRequest","Button","content","labelPosition","icon","onClick","current","click","style","width","name","ref","this","type","hidden","onChange","accept","disabled","Component","App","base64","prediction","nutrients","reader","FileReader","readAsDataURL","onloadend","result","makeNutrientRequest","myHeaders","Headers","append","raw","JSON","stringify","fetch","method","headers","body","redirect","then","response","json","catch","error","console","log","makePredictRequest","requestOptions","image","re","Image","src","foods","nf_calories","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e63580c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Nav.css';\r\n\r\nfunction app(){\r\n    return(\r\n        <div id=\"nav\">\r\n            Nutrition Analysis using Image Classification\r\n\t    </div>\r\n    )\r\n}\r\n\r\nexport default app;","import React,{Component} from 'react';\r\nimport {Button} from 'semantic-ui-react'\r\nimport './InputBox.css';\r\n\r\nclass InputBox extends Component {\r\n  state = {\r\n      file : false\r\n  }\r\n  fileInputRef = React.createRef();\r\n\r\n  fileChange=(e)=>{\r\n      if(e.target.files[0]){\r\n        this.setState({\r\n            file:e.target.files[0]\r\n        })\r\n        this.props.showImage(e.target.files[0])\r\n      }\r\n  }\r\n  handleUpload = ()=>{\r\n    this.props.makeRequest()\r\n    this.setState({file:false})\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n    <div id = \"input-box\" >\r\n        <Button\r\n            content=\"Browse\"\r\n            labelPosition=\"left\"\r\n            icon=\"file\"\r\n            onClick={() => {this.fileInputRef.current.click()}}\r\n            style={{width:\"auto\"}}\r\n        />\r\n        <input\r\n            name='yoyo'\r\n            id='yoyo'\r\n            ref={this.fileInputRef}\r\n            type=\"file\"\r\n            hidden\r\n            onChange={this.fileChange}\r\n            accept=\"image/*\"\r\n        />\r\n        <Button\r\n            content=\"Upload\"\r\n            labelPosition=\"left\"\r\n            icon=\"upload\"\r\n            disabled={!this.state.file}\r\n            style={{width:\"auto\"}}\r\n            onClick={ this.handleUpload}\r\n        />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputBox;\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport Nav from './Nav/Nav'\nimport {Image} from 'semantic-ui-react'\nimport InputBox from './InputBox/InputBox'\nclass App extends Component {\n  state = {\n      file: false,\n      base64:null,\n      prediction:null,\n      nutrients: null\n  }\n\n  showImage = (file) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onloadend = () => {\n      this.setState({\n        file:file,\n        base64: reader.result\n      })\n    } \n  }\n\n  makeNutrientRequest = (name) => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"x-app-key\", \"a0765d4678a8c6a7fb6cc657569868e7\");\n    myHeaders.append(\"x-app-id\", \"67f40abf\");\n    myHeaders.append(\"x-remote-uset-id\", \"vijitkambojdev\");\n\n    var raw = JSON.stringify({\"query\":`${name}`,\"num_servings\":1,\"aggregate\":\"string\",\"line_delimited\":false,\"locale\":\"en_US\"});\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"https://trackapi.nutritionix.com/v2/natural/nutrients\", requestOptions)\n    .then(response => response.json())\n    .then(result => this.setState({prediction:name,nutrients:result}))\n    .catch(error => console.log('error', error));\n    }\n  \n\n  makePredictRequest = ()=>{\n    const requestOptions = {\n      method: 'POST',\n      headers: {\"Content-Type\":\"application/json\",\"Accept\":\"application/json\"},\n      body: JSON.stringify({image:this.state.base64})\n    };  \n    fetch(\"http://localhost:5000/\", requestOptions)\n      .then(result => result.json())\n      .then(re => this.makeNutrientRequest(re.prediction))\n      .catch(error => console.log('error', error));\n  }\n  \n\n  render() {\n    return ( <\n      div id = \"app\" >\n          <Nav />\n          <div id='container'>\n          <Image style={{'height':\"250px\",\"width\":\"auto\", \"margin\":\"0px auto 15px auto\"}} src = {this.state.base64 ? this.state.base64 : null}/>\n          <InputBox makeRequest={this.makePredictRequest} showImage={(file)=>this.showImage(file)}/>\n          <div id=\"prediction\">\n              {this.state.prediction ? this.state.prediction : null} <br />\n              { this.state.nutrients ? `Calories = ${this.state.nutrients.foods[0].nf_calories}` : null}\n          </div>\n          </div>\n          <div id='logo'></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}